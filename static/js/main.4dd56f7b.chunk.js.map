{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","useState","setRobots","searchfield","setSearchfield","count","setCount","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","onClick","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACC,6BAAKF,IACL,4BAAIC,WCiBOK,EAtBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAInB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCEGC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OACC,qBAAKT,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCCI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,oBAAqBC,OAAQ,SAAvE,SACGJ,EAAMK,Y,4BCiBIC,E,kDAnBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,2DAEDG,KAAKX,MAAMK,a,GAhBOQ,a,MCiGZC,MAnCf,WACC,MAA8BC,mBAAS,IAAvC,mBAAQzB,EAAR,KAAgB0B,EAAhB,KACA,EAAwCD,mBAAS,IAAjD,mBAAQE,EAAR,KAAqBC,EAArB,KACA,EAA4BH,mBAAS,GAArC,mBAAQI,EAAR,KAAeC,EAAf,KAEAC,qBAAU,WACTC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIV,EAAUU,QAC1B,IAEF,IAIOC,EAAiBrC,EAAOsC,QAAO,SAAAC,GACpC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASd,EAAYa,kBAGvD,OAAQxC,EAAO0C,OAGZ,sBAAK9C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,wBAAQ+C,QAAS,kBAAMb,EAASD,EAAQ,IAAxC,sBACA,cAAC,EAAD,CAAWxB,aAdQ,SAACuC,GACtBhB,EAAegB,EAAMC,OAAOC,UAc1B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU9C,OAAQqC,WARtB,6CCxEYU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACR,cAAC,EAAD,IACAC,SAASC,eAAe,SAMzBX,M","file":"static/js/main.4dd56f7b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\treturn (\n\t\t<div className='tc bg-washed-red dib br3 pa3 ma2 grow bw2  shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=250x250`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p> \n\t\t\t</div>\n\t\t</div>\t\n\t\t)\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\n\nconst CardList = ({ robots }) => { \n\t// if(true) {\n\t// \tthrow new Error('Noooo!');\n\t// }  \n\treturn (\n\t\t<div> \n\t\t\t{\n\t\t\t\trobots.map((user, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t)}  \n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n\treturn(\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robots'\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', border: '3px solid #548CA0', height: '700px'}}>\n\t\t\t{ props.children }\n\t\t</div>\n\t\t) \n};\n\nexport default Scroll;  ","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({hasError: true});\n\t}\n\n\trender() {\n\t\tif(this.state.hasError) {\n\t\t\treturn <h1>Ooooops. That is not good</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n}\n\nexport default ErrorBoundry;","//import React, { Component, useState, useEffect } from 'react';\nimport React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList.js';\nimport SearchBox from '../components/SearchBox.js';\nimport Scroll from '../components/Scroll.js';  \nimport ErrorBoundry from '../components/ErrorBoundry.js'\nimport './App.css';  \n\n// const App = () => {\n// \treturn (\n// \t\t<div className ='tc'>\n// \t\t\t<h1>RoboFriends</h1>\n// \t\t\t<SearchBox/>\n// \t\t\t<CardList robots={robots}/>\n// \t\t</div>\t\n// \t);\n// }\n\n// class App extends Component {\n//  \tconstructor() {\n//  \t\tsuper()\n//  \t\tthis.state = {\n//  \t\t\trobots: [],\n//  \t\t\tsearchfield: ' '\n//  \t\t}\n//  \t}\n\n//  \tcomponentDidMount(){\n//  \t\tfetch('https://jsonplaceholder.typicode.com/users')\n// \t \t\t.then(response => response.json())\n// \t \t\t.then(users => this.setState({ robots: users }));\n//  \t}\n\n//  \tonSearchChange = (event) => {\n//  \t\tthis.setState({ searchfield: event.target.value })\n//  \t}\n\n// \trender() {\n// \t\tconst { robots, searchfield } = this.state;\n//  \t\tconst filteredRobots = robots.filter(robot => {\n//  \t\t\t//return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n//  \t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n//  \t\t})\n//  \t\t//if(robots.length === 0){\n//  \t\t// if(!robots.length){\n//  \t\t// \treturn <h1 className='tc'>Loading...</h1> \n//   \t\t// } else {\n// \t\t\treturn !robots.length ?\n// \t\t\t<h1>Loading</h1> :\n// \t\t\t(    \n// \t\t\t\t<div className='tc'>\n// \t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n// \t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n// \t\t\t\t\t<Scroll>\n// \t\t\t\t\t\t<ErrorBoundry>\n// \t\t\t\t\t\t\t<CardList robots={filteredRobots} />\n// \t\t\t\t\t\t</ErrorBoundry>\n// \t\t\t\t\t</Scroll>\n// \t\t\t\t</div>\t\n// \t\t\t);\t\n//  \t\t//}\n// \t}\n// }\n\nfunction App() {\n\tconst [ robots, setRobots ] = useState([]);\n\tconst [ searchfield, setSearchfield ] = useState('');\n\tconst [ count, setCount ] = useState(0);\n\n\tuseEffect(() => {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t \t\t.then(response => response.json())\n\t \t\t.then(users => setRobots(users));\n\t},[]) // 2.arg : only run when [...] changes > [empty] == initially(one time at the 1. render)\n\n\tconst onSearchChange = (event) => {\n \t\tsetSearchfield(event.target.value )\n \t}\n\n \tconst filteredRobots = robots.filter(robot => {\n \t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n \t})\n \n\treturn !robots.length ?\n\t\t\t<h1>Loading...</h1> :\n\t\t\t(    \n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t\t<button onClick={() => setCount(count + 1)}>Click me</button>\n\t\t\t\t\t<SearchBox searchChange={onSearchChange} />\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\t\n\t\t\t);\n}\n\nexport default App; \n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'; \nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n\t<App/>, \n\tdocument.getElementById('root')\n\t);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}